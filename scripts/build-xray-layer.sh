#!/bin/bash

# Build X-Ray Lambda Layer with correlation ID utilities
# This script creates a Lambda layer with X-Ray SDK and correlation utilities

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"
LAYER_DIR="$PROJECT_ROOT/layers/xray-correlation"
BUILD_DIR="$LAYER_DIR/build"
PYTHON_DIR="$BUILD_DIR/python"

echo "Building X-Ray correlation Lambda layer..."

# Clean previous build
rm -rf "$BUILD_DIR"
mkdir -p "$PYTHON_DIR"

# Create requirements.txt for the layer
cat > "$LAYER_DIR/requirements.txt" << EOF
aws-xray-sdk==2.12.1
boto3>=1.26.0
botocore>=1.29.0
EOF

# Install Python dependencies
echo "Installing Python dependencies..."
pip install -r "$LAYER_DIR/requirements.txt" -t "$PYTHON_DIR"

# Copy correlation ID utilities
echo "Copying correlation ID utilities..."
mkdir -p "$PYTHON_DIR/sentinel_utils"
cp "$PROJECT_ROOT/src/utils/correlation_id.py" "$PYTHON_DIR/sentinel_utils/"
touch "$PYTHON_DIR/sentinel_utils/__init__.py"

# Create layer configuration
cat > "$PYTHON_DIR/sentinel_utils/__init__.py" << 'EOF'
"""
Sentinel X-Ray Correlation Utilities Layer

This layer provides correlation ID management and X-Ray tracing utilities
for Sentinel Lambda functions.

Usage:
    from sentinel_utils.correlation_id import with_correlation_id, trace_operation
    
    @with_correlation_id
    def lambda_handler(event, context):
        # Your Lambda function code here
        pass
"""

from .correlation_id import (
    CorrelationIDManager,
    with_correlation_id,
    trace_operation,
    log_with_correlation,
    create_downstream_event,
    get_trace_context,
    setup_correlation_logging
)

__version__ = "1.0.0"
__all__ = [
    "CorrelationIDManager",
    "with_correlation_id", 
    "trace_operation",
    "log_with_correlation",
    "create_downstream_event",
    "get_trace_context",
    "setup_correlation_logging"
]
EOF

# Create ZIP file for the layer
echo "Creating layer ZIP file..."
cd "$BUILD_DIR"
zip -r "../xray-correlation-layer.zip" python/

# Calculate hash for Terraform
LAYER_HASH=$(sha256sum "../xray-correlation-layer.zip" | cut -d' ' -f1)
echo "$LAYER_HASH" > "../xray-correlation-layer.hash"

echo "Layer built successfully!"
echo "ZIP file: $LAYER_DIR/xray-correlation-layer.zip"
echo "Hash: $LAYER_HASH"

# Create Terraform variables file
cat > "$PROJECT_ROOT/infra/xray-layer-vars.tf" << EOF
# Auto-generated X-Ray layer variables
# Generated by build-xray-layer.sh

locals {
  xray_layer_zip_path    = "\${path.root}/../layers/xray-correlation/xray-correlation-layer.zip"
  xray_layer_source_hash = "$LAYER_HASH"
}
EOF

echo "Terraform variables created at infra/xray-layer-vars.tf"
echo "Layer build complete!"